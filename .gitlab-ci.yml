image: azul/zulu-openjdk-alpine:11

variables:
  GIT_FETCH_EXTRA_FLAGS: --tags

cache:
  key:
    files:
      - gradle/wrapper/gradle-wrapper.properties
  paths:
    - .gradle-cache/caches/
    - .gradle-cache/notifications/
    - .gradle-cache/wrapper/
  policy: pull

workflow:
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /^chore\(release\):/ && $CI_COMMIT_BRANCH == "master"'
      when: never
    - when: always

stages:
  - build
  - publish
  - release

build-modules:
  stage: build
  dependencies: [ ]
  cache:
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
    paths:
      - .gradle-cache/caches/
      - .gradle-cache/notifications/
      - .gradle-cache/wrapper/
    policy: pull-push
  script: |
    ./gradlew --build-cache --gradle-user-home .gradle-cache/ clean build

publish-modules:
  stage: publish
  dependencies: [ ]
  script: |
    ./gradlew --build-cache --gradle-user-home .gradle-cache/ publish
  rules:
    - if: '$CI_COMMIT_TAG'

release-version:
  stage: release
  dependencies: [ ]
  variables:
    GRGIT_USER: GitLab
    GRGIT_PASS: "${RELEASE_TOKEN}"
  script: |
    git config user.name "GitLab"
    git config user.email gitlab@nortal.com
    ./gradlew --build-cache --gradle-user-home .gradle-cache/ release -Prelease.ignoreUncommittedChanges=true --stacktrace
    git push "https://$GRGIT_USER:$GRGIT_PASS@${CI_REPOSITORY_URL#*@}" --tags
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never
