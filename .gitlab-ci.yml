image: openjdk:11.0.9.1-jdk

variables:
  # Disable the Gradle daemon for Continuous Integration servers as correctness
  # is usually a priority over speed in CI environments. Using a fresh
  # runtime for each build is more reliable since the runtime is completely
  # isolated from any previous builds.
  # GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  # Tags are not fetched if GitLab shallow cloning is enabled (default).
  # However, release plugin requires actual tags to be available.
  GIT_FETCH_EXTRA_FLAGS: --tags

cache:
  key:
    files:
      - gradle/wrapper/gradle-wrapper.properties
  paths:
    - .gradletasknamecache/caches/
    - .gradletasknamecache/notifications/
    - .gradletasknamecache/wrapper/

workflow:
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /^chore\(release\):/ && $CI_COMMIT_BRANCH == "master"'
      when: never
    - when: always

stages:
  - build
  - publish
  - release

build-modules:
  stage: build
  dependencies: [ ]
  script: |
    ./gradlew --build-cache --gradle-user-home .gradletasknamecache/ clean build

publish-modules:
  stage: publish
  dependencies: [ ]
  script: |
    ./gradlew --build-cache --gradle-user-home .gradletasknamecache/ publish
  rules:
    - if: '$CI_COMMIT_TAG'

release-version:
  stage: release
  dependencies: [ ]
  variables:
    GRGIT_USER: GitLab
    GRGIT_PASS: "${RELEASE_TOKEN}"
  script: |
    git config user.name "GitLab"
    git config user.email gitlab@gtcybertech.com
    ./gradlew --build-cache --gradle-user-home .gradletasknamecache/ release -Prelease.ignoreUncommittedChanges=true --stacktrace
    git push "https://$GRGIT_USER:$GRGIT_PASS@${CI_REPOSITORY_URL#*@}" --tags
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never
