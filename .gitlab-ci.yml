image: openjdk:11.0.9.1-jdk

variables:
  # Disable the Gradle daemon for Continuous Integration servers as correctness
  # is usually a priority over speed in CI environments. Using a fresh
  # runtime for each build is more reliable since the runtime is completely
  # isolated from any previous builds.
#  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  # Tags are not fetched if GitLab shallow cloning is enabled (default).
  # However, release plugin requires actual tags to be available.
  GIT_FETCH_EXTRA_FLAGS: --tags

#cache:
#  key: gradle-cache-key
#  paths:
#    - .gradle/wrapper
#    - .gradle/caches
#  policy: pull
#
#before_script:
#  - export GRADLE_USER_HOME=`pwd`/.gradle

workflow:
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /^chore\(release\):/ && $CI_COMMIT_BRANCH == "master"'
      when: never
    - when: always

stages:
  - build
  - publish
  - release

build-modules:
  stage: build
  dependencies: [ ]
#  only:
#    changes:
#      - "*.gradle"
#      - gradle.properties
#  cache:
#    key: gradle-cache-key
#    paths:
#      - .gradle/wrapper
#      - .gradle/caches
#    policy: push
  script: |
    ./gradlew clean build

publish-modules:
  stage: publish
  dependencies: [ ]
  script: |
    ./gradlew publish
  rules:
    - if: '$CI_COMMIT_TAG'

release-version:
  stage: release
  dependencies: [ ]
  variables:
    GRGIT_USER: GitLab
    GRGIT_PASS: "${RELEASE_TOKEN}"
  script: |
    git config user.name "GitLab"
    git config user.email gitlab@gtcybertech.com
    ./gradlew release -Prelease.ignoreUncommittedChanges=true --stacktrace
    git push "https://$GRGIT_USER:$GRGIT_PASS@${CI_REPOSITORY_URL#*@}" --tags
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never
